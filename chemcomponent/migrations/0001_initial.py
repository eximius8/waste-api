# Generated by Django 3.1.4 on 2020-12-18 19:39

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('litsource', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='WasteComponent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=400, verbose_name='Название')),
                ('other_names', models.CharField(blank=True, default='', max_length=1000, verbose_name='Другие названия (через точку с запятой)')),
                ('cas_number', models.CharField(blank=True, max_length=30, validators=[django.core.validators.RegexValidator(message='CAS код для вещества в формате 1111-11-1', regex='\\b[1-9]{1}[0-9]{1,6}-\\d{2}-\\d\\b')], verbose_name='Регистрационный номер CAS')),
                ('chemical_type', models.CharField(choices=[('O', 'Органическое'), ('I', 'Неорганическое')], default='O', max_length=1, verbose_name='Тип')),
                ('x_value', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1.0), django.core.validators.MaxValueValidator(4.0)], verbose_name='X - относительный параметр опасности компонента отхода для окружающей среды (если известен - указание источника обязательно)')),
                ('land_concentration', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1000000.0)], verbose_name='Максимальная фоновая концентрация в почвах (мг/кг) (если известно - указание источника обязательно)')),
                ('s_rastv', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Растворимость компонента отхода (вещества) в воде при 20°С (мг/л)')),
                ('pdk_v', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Предельно допустимая концентрация вещества в воде водных объектов, используемых для целей питьевого и хозяйственно-бытового водоснабжения (мг/л)')),
                ('c_nasish', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Насыщающая концентрация вещества в воздухе при 20°С и нормальном давлении (мг/м^3)')),
                ('pdk_rz', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Предельно допустимая концентрация вещества в атмосферном воздухе рабочей зоны (мг/м^3)')),
                ('pdk_ss', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Предельно допустимая концентрация вещества среднесуточная в атмосферном воздухе населенных мест (мг/м^3)')),
                ('pdk_mr', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Предельно допустимая концентрация вещества максимально разовая в атмосферном воздухе населенных мест (мг/м^3)')),
                ('bpk5', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Биологическое потребление кислорода, выраженное в миллилитрах O2/л за 5 суток')),
                ('xpk', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Химическое потребление кислорода ХПК, выраженное в миллилитрах O2/100 л')),
                ('bpk5_lit_source', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='bpk5', to='litsource.literaturesource', verbose_name='Источник литературы для БПК5 (если задан, то обязателен)')),
                ('c_nasish_lit_source', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='c_nasish', to='litsource.literaturesource', verbose_name='Источник литературы для насыщающей концентрации вещества (если задана, то обязателен)')),
                ('land_concentration_lit_source', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='land_concentration', to='litsource.literaturesource', verbose_name='Источник литературы для фоновой концентрации (если задана фоновая концентрация, то обязателен)')),
                ('pdk_mr_lit_source', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pdk_mr', to='litsource.literaturesource', verbose_name='Источник литературы для ПДКмр (если задан, то обязателен)')),
                ('pdk_rz_lit_source', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pdk_rz', to='litsource.literaturesource', verbose_name='Источник литературы для ПДКрз (если задан, то обязателен)')),
                ('pdk_ss_lit_source', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pdk_ss', to='litsource.literaturesource', verbose_name='Источник литературы для ПДКсс (если задан, то обязателен)')),
                ('pdk_v_lit_source', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pdk_v', to='litsource.literaturesource', verbose_name='Источник литературы для ПДКв (если задан, то обязателен)')),
                ('s_rastv_lit_source', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='s_rastv', to='litsource.literaturesource', verbose_name='Источник литературы для растворимости компонента отхода (если задана, то обязателен)')),
                ('x_value_lit_source', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='x_value', to='litsource.literaturesource', verbose_name='Источник литературы для относительного параметра опаности (если задано числовое значение X, то обязателен)')),
                ('xpk_lit_source', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='xpk', to='litsource.literaturesource', verbose_name='Источник литературы для ХПК (если задан, то обязателен)')),
            ],
            options={
                'verbose_name': 'Компонент отхода',
                'verbose_name_plural': 'Компоненты отхода',
            },
        ),
    ]
